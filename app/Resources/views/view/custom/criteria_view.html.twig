{% extends 'base.html.twig' %}

{% block title %}{{ view.name }} for {{view.contentType.pluralName}}{% endblock %}
{% block pagetitle %}{{ view.name }} for {{view.contentType.pluralName}}{% endblock %} 
{# {% block subtitle %}<!-- TODO -->{% endblock %} #}


{% block body %}

<div class="row">

	<div class="col-md-12">
		<div class="box box-primary">
			<div class="box-header with-border">
				<h3 class="box-title">Configuration</h3>
			</div>
			<!-- /.box-header -->
			
			<!-- form start -->
			{{ form_start(form) }}
				
				<div class="box-body">
						<table class="table table-bordered">
                <tbody><tr>
                  <td>&nbsp;</td>
                  <td width="66%">{{ form_row(form.columnCriteria) }}</td>
                </tr>
                <tr>
                  <td>{{ form_row(form.rowCriteria) }}</td>
                  <td>
                  	{% if form.category %}
							{{ form_row(form.category) }}
					{% endif %}
				</td>
                </tr>
              </tbody></table>
					<div class="row" id="criterion">
						{{ form_widget(form.criterion) }}
					</div>
				</div>
				<!-- /.box-body -->
				<div class="box-footer">
							{{ form_row(form.manage) }}
{# 					<button type="submit" class="btn btn-primary" id="applyConfig">Apply</button>#}
				</div>
				{{ form_end(form) }}
		</div>
	</div>
</div>

<div class="row">
	<div class="col-md-12" id="table_container">
	</div>
</div>

{% endblock %} 


{% block javascripts %}
	{% include 'app/menu.html.twig' with {
		'item':  'data-view-'~ contentType.id ~ '-' ~ view.id
	}%}
	
	<script type="text/javascript">
<!--

//-->
function formatRepo (repo) {
    if (repo.loading) return repo.text;

    var markup = "<div class='select2-result-repository clearfix'>" +
      repo.text + "</div>";
      
    return markup;
}

function formatRepoSelection (repo) {
	return repo.text;
}

$(window).load(function() {



	$('.criteria-filter-columnrow').change(function(event){

		if($('#criteria_filter_columnCriteria option:selected').val() == $('#criteria_filter_rowCriteria  option:selected').val()){
			if($(this).attr('id') == 'criteria_filter_columnCriteria'){
// 				console.log('row');
// 				console.log($('#criteria_filter_rowCriteria option:not(:selected)').first().val());
				$('#criteria_filter_rowCriteria').val($('#criteria_filter_rowCriteria option:not(:selected)').first().val());

			}
			else {
// 				console.log('col');
// 				console.log($('#criteria_filter_columnCriteria option:not(:selected)').first().val());
				$('#criteria_filter_columnCriteria').val($('#criteria_filter_columnCriteria option:not(:selected)').first().val());

			}
		
		}

		$('div#criterion select').each(function(index){
			var criterionName = $( this ).closest('div[data-name]').data('name');
			var colCriteria = $('#criteria_filter_columnCriteria').val();
			var rowCriteria = $('#criteria_filter_rowCriteria').val();

			var attr = $(this).attr('multiple');

			
			if(criterionName == colCriteria || criterionName == rowCriteria) {
				objectPickerListeners($( this ));
			}
			else{
				if($(this).val().length > 1){
					$(this).val('');
				}
				objectPickerListeners($( this ), 1);
			}

	 	});
	});

	$('#applyConfig55555').click(function(event){
		event.preventDefault();

		$('#waitingModal').modal('show');
		
		var formContent = $("form[name=criteria_filter]").serialize();

		$('#table_container').empty();
		
		$.get("{{ url('views.criteria.table', {view: view.id}) }}", formContent)
		  .done(function(message) {

			  $('#table_container').append(message);


			  
		  })
		  .fail(function() {
			  $('#table_container').append('<div class="alert alert-danger alert-dismissible">'+
		                '<button type="button" class="close" data-dismiss="alert" aria-hidden="true">Ã—</button>'+
		                '<h4><i class="icon fa fa-ban"></i> Alert!</h4>'+
		                'It was impossible to retrieve the criteria table.'+
		                '</div>');
// 			alert( "It was impossible to retrieve the criteria table." );
		  })
		  .always(function() {
			$('#waitingModal').modal('hide');
// 			globalWaitingResponse = false;
		});
	});

	$(".objectpicker").each(function(index){
		objectPickerListeners($( this ));
	});

	$(".select2Filter").each(function(){
		
		var targetField = $("#"+$(this).data('field-target'));

		$( this ).select2({
			  ajax: {
			    url: '{{ url("views.criteria.fieldFilter") }}',
			    dataType: 'json',
			    delay: 250,
			    data: function (params) {
				    
			      return {
			        q: params.term, // search term
			        page: params.page,
			        targetField: targetField.val(),
			      };
			    },
			    processResults: function (data, params) {
			      // parse the results into the format expected by Select2
			      // since we are using custom formatting functions we do not need to
			      // alter the remote JSON data, except to indicate that infinite
			      // scrolling can be used
			      params.page = params.page || 1;
			
			      return {
			        results: data.items,
			        pagination: {
			          more: (params.page * 30) < data.total_count
			        }
			      };
			    },
			    cache: true
			  },
			  escapeMarkup: function (markup) { return markup; }, // let our custom formatter work
			  minimumInputLength: 0,
			  templateResult: formatRepo, // omitted for brevity, see the source of this page
			  templateSelection: formatRepoSelection // omitted for brevity, see the source of this page
			});
		
	});

	$('.criteria-filter-columnrow').trigger('change');
	
});






</script>
{% endblock %}	