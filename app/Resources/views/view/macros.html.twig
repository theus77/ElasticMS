

{%  macro renderDataField(dataField) %}
	{{ attribute(_self, dataField.fieldType.type|replace({'\\': '_'}), [dataField]) }}
{% endmacro %}

{%  macro recursifArray(array) %}
<ul class="list-group">
	{% for prop, value in array if prop != 'properties' and prop != 'type' %}
		<li class="list-group-item">
			<strong>{{ prop }} : </strong>
			{% if value is iterable %}
				{{ _self.recursifArray(value) }}
			{% else %}
				{{ value }}
			{% endif %}
		</li>
	{% endfor %}
</ul>
{% endmacro %}

{%  macro recursifMapping(mapping, path) %}
	<div class="box-group" id="accordion{{ path }}">
		{% for key, child in mapping %}
			{% set collapsable =  (child|length > 1 or  child.properties is defined)%}
			<div class="panel box">
				<div
					class="box-header with-border bg-gray color-palette">
					<h4 class="box-title">
						{% if collapsable %}
							<a data-toggle="collapse" data-parent="#accordion{{ path }}"
								href="#collapse{{ path }}_{{ key }}" class="collapsed" aria-expanded="false"> 
								{{ key }} 
								{% if child.type is defined %}<small>{{ child.type }}</small>{% endif %}
							</a>
						{% else %}
							{{ key }} 
							<small>{{ child.type }}</small>
						{% endif %}
					</h4>
				</div>
				{% if collapsable %}
					<div id="collapse{{ path }}_{{ key }}" class="panel-collapse collapse"
						aria-expanded="false" style="height: 0px;">
						<div class="box-body">
							{% if child|length > 1 %}
								{{ _self.recursifArray(child) }}
							{% endif %}
							{% if child.properties is defined  %}
								{{ _self.recursifMapping(child.properties, path ~ '_' ~ key) }}
							{% endif %}
						</div>
					</div>
				{% endif %}
			</div>
		{% endfor %}
	</div>
{% endmacro %}



{%  macro renderMapping(mapping) %}
	{{ _self.recursifMapping(mapping, '') }}
{% endmacro %}

{% macro AppBundle_Form_DataField_ContainerType(dataField) %}
    {% if dataField.fieldType.displayOptions.label is defined %}
    	<div class="panel panel-default">
			<div class="panel-heading">
				<h3 class="panel-title">
					{% if dataField.fieldType.displayOptions.icon is defined %}
						<i class="{{ dataField.fieldType.displayOptions.icon }}"></i> 
					{% endif %}
					{% if dataField.fieldType.displayOptions.label is defined %}
						{{ dataField.fieldType.displayOptions.label }}
					{% else %}
						{{ dataField.fieldType.name }}
					{% endif %}
				</h3>
			</div>
			<div class="panel-body">
	{% endif %}
		{% for child in dataField.children if not child.fieldType.deleted %}
			<div class="{% if child.fieldType.displayOptions.class  %} {{ child.fieldType.displayOptions.class }} {% endif %}">
				{{ attribute(_self, child.fieldType.type|replace({'\\': '_'}), [child]) }}
			</div>
		{% endfor %}
    {% if dataField.fieldType.displayOptions.label is defined %}
    		</div>
		</div>
	{% endif %}
{% endmacro %}

{% macro AppBundle_Form_DataField_OuuidType(dataField) %}
	<dl>
		{% if dataField.fieldType.displayOptions.label is defined %}
			<dt>{{ dataField.fieldType.displayOptions.label }} ({{ dataField.fieldType.name }})</dt>
		{% else %}
			<dt>{{ dataField.fieldType.name }}</dt>
		{% endif %}
		<dd>{{ dataField.textValue }}</dd>
	</dl>
{% endmacro %}

{% macro AppBundle_Form_DataField_StringType(dataField) %}
	<dl class="{% if dataField.fieldType.displayOptions.class is defined %}{{ dataField.fieldType.displayOptions.class }}{% endif %}">
		{% if dataField.fieldType.displayOptions.label is defined %}
			<dt>{{ dataField.fieldType.displayOptions.label }} ({{ dataField.fieldType.name }})</dt>
		{% else %}
			<dt>{{ dataField.fieldType.name }}</dt>
		{% endif %}
		
		<dd>{{ dataField.textValue }}</dd>
	</dl>
{% endmacro %}

{% macro AppBundle_Form_DataField_TextAreaType(dataField) %}
	<dl>
		<dt>
			{% if dataField.fieldType.displayOptions.label is defined %}
				{{ dataField.fieldType.displayOptions.label }} ({{ dataField.fieldType.name }})
			{% else %}
				{{ dataField.fieldType.name }}
			{% endif %}
		</dt>
		<dd>{{ dataField.textValue }}</dd>
	</dl>
{% endmacro %}

{% macro AppBundle_Form_DataField_WysiwygType(dataField) %}
	<dl>
		<dt>
			{% if dataField.fieldType.displayOptions.label is defined %}
				{{ dataField.fieldType.displayOptions.label }} ({{ dataField.fieldType.name }})
			{% else %}
				{{ dataField.fieldType.name }}
			{% endif %}
		</dt>
		<dd>
			<div class="panel panel-default">
				<div class="panel-body">	
					{{ dataField.textValue|raw }}
				</div>
			</div>
		</dd>
	</dl>
{% endmacro %}

