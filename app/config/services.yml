# Learn more about services, parameters and containers at
# http://symfony.com/doc/current/book/service_container.html
parameters:
    templating: value

services:
    app.twig_extension:
        class: AppBundle\Twig\AppExtension
        arguments: ['@doctrine', '@security.authorization_checker', '@ems.service.user', '@ems.service.contenttype', '@app.elasticsearch', '@router', '@twig', '@ems.form.factories.objectChoiceListFactory' ]
        #public: false
        tags:
            - { name: twig.extension, priority: -2000 }
    app.listener.request:
        class: AppBundle\EventListener\RequestListener
        arguments: ['@twig', '@doctrine', '@logger', '@router', '@service_container', '@security.authorization_checker', '@session']
        tags:
            - { name: kernel.event_listener, event: kernel.controller, method: provideTemplateTwigObjects, priority: -20 }
            - { name: kernel.event_listener, event: kernel.terminate, method: startJob }
            - { name: kernel.event_listener, event: kernel.exception, method: onKernelException }
            #kernel.response or kernel.terminate
    app.elasticsearch:
        class: Elasticsearch\ClientBuilder
        factory: [AppBundle\Factories\ElasticsearchClientBuilderFactory, build]
        arguments: ["%elasticsearch_cluster%"]
    app.twig.extension.stringloader:
        class: Twig_Extension_StringLoader
        tags:
             - { name: 'twig.extension' }
#### Begin list available ems ViewType ###
    ems.fieldtype.container:
        class: AppBundle\Form\DataField\ContainerFieldType
        calls:
            - [setAuthorizationChecker, ['@security.authorization_checker']]
        tags:
            - { name: ems.form.datafieldtype, alias: container }
            - { name: form.type }
    ems.fieldtype.collection:
        class: AppBundle\Form\DataField\CollectionFieldType
        calls:
            - [setAuthorizationChecker, ['@security.authorization_checker']]
        tags:
            - { name: ems.form.datafieldtype, alias: collection }
            - { name: form.type }
    ems.fieldtype.colorpicker:
        class: AppBundle\Form\DataField\ColorPickerFieldType
        calls:
            - [setAuthorizationChecker, ['@security.authorization_checker']]
        tags:
            - { name: ems.form.datafieldtype, alias: colorpicker }
            - { name: form.type }
    ems.fieldtype.nested:
        class: AppBundle\Form\DataField\NestedFieldType
        calls:
            - [setAuthorizationChecker, ['@security.authorization_checker']]
        tags:
            - { name: ems.form.datafieldtype, alias: nested }
            - { name: form.type }
    ems.fieldtype.tabs:
        class: AppBundle\Form\DataField\TabsFieldType
        calls:
            - [setAuthorizationChecker, ['@security.authorization_checker']]
        tags:
            - { name: ems.form.datafieldtype, alias: tabs }
            - { name: form.type }
    ems.fieldtype.ouuid:
        class: AppBundle\Form\DataField\OuuidFieldType
        calls:
            - [setAuthorizationChecker, ['@security.authorization_checker']]
        tags:
            - { name: ems.form.datafieldtype, alias: ouuid }
            - { name: form.type }
    ems.fieldtype.computed:
        class: AppBundle\Form\DataField\ComputedFieldType
        calls:
            - [setAuthorizationChecker, ['@security.authorization_checker']]
        tags:
            - { name: ems.form.datafieldtype, alias: computed }
            - { name: form.type }
    ems.fieldtype.dataLink:
        class: AppBundle\Form\DataField\DataLinkFieldType
        calls:
            - [setAuthorizationChecker, ['@security.authorization_checker']]
            - [setClient, ['@app.elasticsearch']]
            - [setRegistry, ['@form.registry']]
        tags:
            - { name: ems.form.datafieldtype, alias: datalink }
            - { name: form.type }
    ems.fieldtype.textstring:
        class: AppBundle\Form\DataField\TextStringFieldType
        calls:
            - [setAuthorizationChecker, ['@security.authorization_checker']]
        tags:
            - { name: ems.form.datafieldtype, alias: textstring }
            - { name: form.type }
    ems.fieldtype.wysiwyg:
        class: AppBundle\Form\DataField\WysiwygFieldType
        calls:
            - [setAuthorizationChecker, ['@security.authorization_checker']]
        tags:
            - { name: ems.form.datafieldtype, alias: wysiwyg }
            - { name: form.type }
    ems.fieldtype.textarea:
        class: AppBundle\Form\DataField\TextareaFieldType
        calls:
            - [setAuthorizationChecker, ['@security.authorization_checker']]
        tags:
            - { name: ems.form.datafieldtype, alias: textarea }
            - { name: form.type }
    ems.fieldtype.select:
        class: AppBundle\Form\DataField\SelectFieldType
        calls:
            - [setAuthorizationChecker, ['@security.authorization_checker']]
        tags:
            - { name: ems.form.datafieldtype, alias: select }
            - { name: form.type }
    ems.fieldtype.password:
        class: AppBundle\Form\DataField\PasswordFieldType
        calls:
            - [setAuthorizationChecker, ['@security.authorization_checker']]
        tags:
            - { name: ems.form.datafieldtype, alias: password }
            - { name: form.type }
    ems.fieldtype.email:
        class: AppBundle\Form\DataField\EmailFieldType
        calls:
            - [setAuthorizationChecker, ['@security.authorization_checker']]
        tags:
            - { name: ems.form.datafieldtype, alias: email }
            - { name: form.type }
    ems.fieldtype.asset:
        class: AppBundle\Form\DataField\AssetFieldType
        calls:
            - [setAuthorizationChecker, ['@security.authorization_checker']]
        tags:
            - { name: ems.form.datafieldtype, alias: asset }
            - { name: form.type }
    ems.fieldtype.radio:
        class: AppBundle\Form\DataField\RadioFieldType
        calls:
            - [setAuthorizationChecker, ['@security.authorization_checker']]
        tags:
            - { name: ems.form.datafieldtype, alias: radio }
            - { name: form.type }
    ems.fieldtype.choice:
        class: AppBundle\Form\DataField\ChoiceFieldType
        calls:
            - [setAuthorizationChecker, ['@security.authorization_checker']]
        tags:
            - { name: ems.form.datafieldtype, alias: choice }
            - { name: form.type }
    ems.fieldtype.checkbox:
        class: AppBundle\Form\DataField\CheckboxFieldType
        calls:
            - [setAuthorizationChecker, ['@security.authorization_checker']]
        tags:
            - { name: ems.form.datafieldtype, alias: checkbox }
            - { name: form.type }
    ems.fieldtype.number:
        class: AppBundle\Form\DataField\NumberFieldType
        calls:
            - [setAuthorizationChecker, ['@security.authorization_checker']]
        tags:
            - { name: ems.form.datafieldtype, alias: number }
            - { name: form.type }
    ems.fieldtype.integer:
        class: AppBundle\Form\DataField\IntegerFieldType
        calls:
            - [setAuthorizationChecker, ['@security.authorization_checker']]
        tags:
            - { name: ems.form.datafieldtype, alias: integer }
            - { name: form.type }
    ems.fieldtype.date:
        class: AppBundle\Form\DataField\DateFieldType
        #arguments: ['%date_format%']
        calls:
            - [setAuthorizationChecker, ['@security.authorization_checker']]
        #    - [setDateFormat, ['%date_format%']]
        tags:
            - { name: ems.form.datafieldtype, alias: date }
            - { name: form.type }
    ems.fieldtype.time:
        class: AppBundle\Form\DataField\TimeFieldType
        #arguments: ['%date_format%']
        calls:
            - [setAuthorizationChecker, ['@security.authorization_checker']]
        tags:
            - { name: ems.form.datafieldtype, alias: time }
            - { name: form.type }
    ems.fieldtype.collectionItem:
        class: AppBundle\Form\DataField\CollectionItemFieldType
        #arguments: ['%date_format%']
        calls:
            - [setAuthorizationChecker, ['@security.authorization_checker']]
        tags:
            - { name: form.type }
    ems.fieldtype.time:
        class: AppBundle\Form\DataField\CollectionItemFieldType
        #arguments: ['%date_format%']
        calls:
            - [setAuthorizationChecker, ['@security.authorization_checker']]
        tags:
            - { name: form.type }
#### End list available ems views ###
#### Begin list available ems views ###
    ems.view.keywords:
        class: AppBundle\Form\View\KeywordsViewType
        arguments: ['@twig', '@app.elasticsearch']
        tags:
            - { name: ems.form.viewtype, alias: keywords }
            - { name: form.type }
    ems.view.criteria:
        class: AppBundle\Form\View\CriteriaViewType
        arguments: ['@twig', '@app.elasticsearch', '@router']
        tags:
            - { name: ems.form.viewtype, alias: criteria }
            - { name: form.type }
    ems.view.report:
        class: AppBundle\Form\View\ReportViewType
        arguments: ['@twig', '@app.elasticsearch']
        tags:
            - { name: ems.form.viewtype, alias: report }
            - { name: form.type }
#### End list available ems views ###
    ems.form.factories.objectChoiceListFactory:
        class: AppBundle\Form\Factory\ObjectChoiceListFactory
        arguments: ['@ems.service.contenttype', '@ems.service.objectchoicecache']
    ems.form.factories.contentTypeFieldChoiceListFactory:
        class: AppBundle\Form\Factory\ContentTypeFieldChoiceListFactory
        arguments: ['@ems.service.contenttype']
    ems.form.field.objectpickertype:
        class: AppBundle\Form\Field\ObjectPickerType
        arguments: ['@ems.form.factories.objectChoiceListFactory', '@ems.service.contenttype']
        tags:
            - { name: form.type }
    ems.form.field.contenttypefieldpickertype:
        class: AppBundle\Form\Field\ContentTypeFieldPickerType
        arguments: ['@ems.form.factories.contentTypeFieldChoiceListFactory']
        tags:
            - { name: form.type }
    ems.form.field.viewtypepickertype:
        class: AppBundle\Form\Field\ViewTypePickerType
        tags:
            - { name: form.type }
    ems.form.field.datafieldtypepickertype:
        class: AppBundle\Form\Field\FieldTypePickerType
        tags:
            - { name: form.type }
    ems.form.field.rolepickertype:
        class: AppBundle\Form\Field\RolePickerType
        arguments: ['@ems.service.user']
        tags:
            - { name: form.type }
    ems.form.field.environmentpickertype:
        class: AppBundle\Form\Field\EnvironmentPickerType
        arguments: ['@ems.service.environment']
        tags:
            - { name: form.type }
    ems.form.fieldtype.fieldtypetype:
        class: AppBundle\Form\FieldType\FieldTypeType
        arguments: ['@ems.form.field.datafieldtypepickertype']
        tags:
            - { name: form.type }
    ems.form.form.templatetype:
        class: AppBundle\Form\Form\TemplateType
        arguments: ['%circles_object%', '@ems.service.environment']
        tags:
            - { name: form.type }
    ems.form.form.notificationtype:
        class: AppBundle\Form\Form\NotificationFormType
        arguments: ['%circles_object%', '@ems.service.environment']
        tags:
            - { name: form.type }
### regular services
    ems.service.mapping:
        class: AppBundle\Service\Mapping
        arguments: ['@ems.form.fieldtype.fieldtypetype']
    ems.service.data:
        class: AppBundle\Service\DataService
        arguments: ['@doctrine', '@security.authorization_checker', '@security.token_storage', '%lock_time%', '@app.elasticsearch', '@ems.service.mapping', '%instance_id%', '@session', '@form.factory', '@service_container']
    ems.service.environment:
        class: AppBundle\Service\EnvironmentService
        arguments: ['@doctrine', '@session', '@ems.service.user', '@security.authorization_checker']
    ems.service.contenttype:
        class: AppBundle\Service\ContentTypeService
        arguments: ['@doctrine', '@session']
    ems.service.user:
        class: AppBundle\Service\UserService
        arguments: ['@doctrine', '@session', '@security.token_storage', '%security.role_hierarchy.roles%']
    ems.service.objectchoicecache:
        class: AppBundle\Service\ObjectChoiceCacheService
        arguments: ['@app.elasticsearch', '@session', '@ems.service.contenttype']
    ems.service.audit:
        class: AppBundle\Service\AuditService
        arguments: ['%audit_index%', '@doctrine', '@app.elasticsearch', '@ems.service.user', '@logger']
    ems.service.publish:
        class: AppBundle\Service\PublishService
        arguments: ['@doctrine', '@security.authorization_checker', '@security.token_storage', '@app.twig_extension', '%lock_time%', '@app.elasticsearch', '@ems.service.mapping', '%instance_id%', '@session', '@ems.service.contenttype', '@ems.service.environment', '@ems.service.data', '@ems.service.audit', '@ems.service.user']
    ems.service.notification:
        class: AppBundle\Service\NotificationService
        arguments: ['%audit_index%', '@doctrine', '@ems.service.user', '@logger', '@ems.service.audit', '@session', '@service_container', '@ems.service.data', '%from_email%', '@twig']

### Storage services ###
    ems.storage.filesystem:
        class: AppBundle\Service\Storage\FileSystemStorage
        arguments: ['%filesystem_storage_folder%', '%kernel.root_dir%']
        tags:
            -  { name: ems.storage }
### command services ###
    ems.contenttype.migrate:
        class: AppBundle\Command\MigrateCommand
        arguments: ['@doctrine', '@logger', '@app.elasticsearch', '@ems.service.mapping', '@ems.service.data']
        tags:
            -  { name: console.command }
    ems.environment.rebuild:
        class: AppBundle\Command\RebuildCommand
        arguments: ['@doctrine', '@logger', '@app.elasticsearch', '@ems.service.mapping', '@service_container']
        tags:
            -  { name: console.command }
    ems.environment.align:
        class: AppBundle\Command\AlignCommand
        arguments: ['@doctrine', '@logger', '@app.elasticsearch', '@ems.service.data']
        tags:
            -  { name: console.command }
    ems.environment.reindex:
        class: AppBundle\Command\ReindexCommand
        arguments: ['@doctrine', '@logger', '@app.elasticsearch', '@ems.service.mapping', '@service_container']
        tags:
            -  { name: console.command }
    ems.contenttype.delete:
        class: AppBundle\Command\DeleteCommand
        arguments: ['@doctrine', '@logger', '@app.elasticsearch', '@ems.service.mapping', '@service_container']
        tags:
            -  { name: console.command }
    ems.notification.send:
        class: AppBundle\Command\SendNotificationsCommand
        arguments: ['@doctrine', '@logger', '@ems.service.user', '@ems.service.notification', '%notification_pending_timeout%']
        tags:
            -  { name: console.command }
#### security services
    api_key_user_provider:
        class: AppBundle\Security\ApiKeyUserProvider
        arguments: ['@ems.service.user']
    apikey_authenticator:
        class:  AppBundle\Security\ApiKeyAuthenticator
        public: false