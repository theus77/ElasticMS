<?php

namespace AppBundle\Repository;

use AppBundle\Entity\Environment;
use Doctrine\DBAL\Query\QueryBuilder;

/**
 * EnvironmentRepository
 *
 * This class was generated by the Doctrine ORM. Add your own custom
 * repository methods below.
 */
class EnvironmentRepository extends \Doctrine\ORM\EntityRepository
{
	
	public function findAvailableEnvironements(Environment $defaultEnv) {
		/** @var QueryBuilder $qb */
		$qb = $this->createQueryBuilder('e');
		$qb->where($qb->expr()->neq('e.id', ':defaultEnvId'));
		$qb->andWhere('e.managed <> 0');
		$qb->orderBy('e.name', 'ASC');
		$qb->setParameter('defaultEnvId', $defaultEnv->getId());
	
		return $qb->getQuery()->getResult();
	}
	
	
	public function findManagedIndexes() {
		$qb = $this->createQueryBuilder('e');
		$qb->select('e.alias alias');
		$qb->where($qb->expr()->eq('e.managed', true));
	
		return $qb->getQuery()->getResult();
	}
	


	public function findAllAsAssociativeArray($field){
		$qb = $this->createQueryBuilder('e');
		$qb->select('e.'.$field.' key, e.name name, e.color color, e.alias alias, e.managed managed');
	
		$out = [];
		$result = $qb->getQuery()->getResult();
		foreach ($result as $record){
			$out[$record['key']] = [
					'color' => $record['color'],
					'name' => $record['name'],
					'alias' => $record['alias'],
					'managed' => $record['managed'],
			];
		}
	
		return $out;
	}
	
}
